-- stack --
#include <stack>
using namespace std;

int main() {
    stack<int> s;
    
    s.push(1);
    s.push(2);
    s.push(3);
    
    while (!s.empty()) {
        cout << s.top();
        s.pop();
    }
    return 0;
}

-- list --
#include <iostream>
#include <list>
using namespace std;
int main() {
    list<int> List;
    List.push_back(1);
    List.push_back(2);
    List.push_back(3);
    list<int>::iterator iter = List.begin();
    iter++;
    List.erase(iter);
    
    for (iter = List.begin(); iter != List.end(); iter++) {
        cout << *iter << " ";
    }
    cout << endl;
    
    return 0;
}
/* result : 1, 3*/


-- unordered_map --
#include <unordered_map>
#include <iostream>
using namespace std;
int main () {
	unordered_map<int, int> Hash;
	pair<int, int> entry_1 (100, 1);
	pair<int, int> entry_2 (200, 2);
	pair<int, int> entry_3 (300, 3);
	Hash.insert(entry_1);
	Hash.insert(entry_2);
	Hash.insert(entry_3);
	
	unordered_map<int, int>::iterator iter = Hash.find(200);
	cout << iter->second << endl;
	
	Hash.erase(200);
	iter = Hash.find(200);
	if ( iter == Hash.end()) {
		cout << "not found" << endl;
	}	
	return 0;	
}
/*
   result :
   2
   not found
*/
